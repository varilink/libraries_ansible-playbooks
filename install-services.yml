# ------------------------------------------------------------------------------
# install-services.yml
# ------------------------------------------------------------------------------

---

# This playbook creates the base services on the Varilink Computing Ltd hosts.
# Those base services are:
#  - Backup
#  - Calendar
#  - DNS
#  - Dynamic DNS
#  - File Share
#  - Git Origin
#  - Mail
#  - Monitor
#  - WordPress
#
# Our hosts play certain roles in the delivery of these services, those roles
# being:
#  - gateway
#  - hub
#  - mail
#  - wordpress
#
# Comments below each hosts array element below describe what each role does as
# as result of executing each set of tasks.
#
# Note that these roles are different to the host names, allowing the hosts
# fulfilling a role to be swapped. The gateway, hub and mail roles are fulfilled
# by a single host and the mapping is implemented via host aliasing in the
# Ansible inventory. The wordpress role is fulfilled by multiple hosts and the
# mapping is implemented using an group, again in the Ansible inventory.

# ---
# DNS
# ---

- hosts: hub

  tasks:

    - ansible.builtin.import_role:
        name: dns
      tags: [backup, dns, mail]

- hosts: gateway

  tasks:

    - ansible.builtin.import_role:
        name: dns_api
      tags: [backup, dns, mail]

- hosts: internal:!hub

  tasks:

    - ansible.builtin.import_role:
        name: dns_client
      tags: [backup, dns, mail]

# ------
# Backup
# ------

- hosts: all:!backup_exceptions

  # All hosts are backed up apart from any that are explicit exceptions.

  tasks:

    - ansible.builtin.import_role:
        name: backup_client
      tags: backup

- hosts: hub

  # The hub host is both the backup director and the backup storage controller.
  # It also provides the backup dashboard as a web site.

  tasks:

    - block:

        - ansible.builtin.import_role:
            name: database

        - ansible.builtin.import_role:
            name: database
            tasks_from: create-backup-database

        - ansible.builtin.import_role:
            name: backup_director

        - ansible.builtin.import_role:
            name: backup_storage

        - ansible.builtin.import_role:
            name: backup_web

        - ansible.builtin.include_role:
            name: dns
            tasks_from: create-record
          vars:
            dns_record_hostname: backup
          loop: ['bacula-dir', 'bacula-sd', 'backup']

      tags: backup

# --------
# Calendar
# --------

- hosts: hub

  tasks:

    - ansible.builtin.import_role:
        name: calendar
      tags: calendar

# -----------
# Dynamic DNS
# -----------

- hosts: gateway

  tasks:

    - ansible.builtin.import_role:
        name: dynamic_dns
      tags: dynamic_dns

# ----------
# File Share
# ----------

- hosts: hub

  tasks:

    - ansible.builtin.import_role:
        name: file_share
      tags: file_share

# ----------
# Git Origin
# ----------

- hosts: hub

  tasks:

    - ansible.builtin.import_role:
        name: git_origin
      tags: git_origin

# ----
# Mail
# ----

# The mail service must be installed on the external mail server first. When it
# is installed on the internal mail server, that server will try to connect to
# the external mail server using fetchmail. This will fail if dovecot is not
# already up and running on the external mail server and listening for IMAP
# requests.

- hosts: mail

  tasks:

    - ansible.builtin.import_role:
        name: mail_external
      tags: mail

- hosts: gateway

  tasks:

    - ansible.builtin.import_role:
        name: dns_api
        tasks_from: create-record
      vars:
        dns_records:
          - hostname: "imap.{{ domain_name }}"
            target: mail
          - hostname: "smtp.{{ domain_name }}"
            target: mail
      tags: mail

- hosts: hub

  tasks:

    - block:

        - ansible.builtin.import_role:
            name: mail_internal

        - ansible.builtin.include_role:
            name: dns
            tasks_from: create-record
          vars:
            dns_record_type: service
            dns_record_hostname: "{{ item }}"
          loop: ['imap', 'smtp', 'webmail']

      tags: mail

# -------
# Monitor
# -------

- hosts: hub

  # The hub host provides a Grafana monitoring dashboard for all hosts.

  tasks:

    - block:

        - ansible.builtin.import_role:
            name: monitor_server

        - ansible.builtin.import_role:
            name: monitor_dashboard

      tags: monitor

- hosts: gateway

  # The gateway hosts provides a route for all external hosts to send their
  # monitoring data to the home host on the office network.

  tasks:

    - block:

        - ansible.builtin.import_role:
            name: monitor_gateway
          vars:
            env_uses_ca: no

        - ansible.builtin.import_role:
            name: dynamic_dns
            tasks_from: copy-project-records

      tags: monitor

- hosts: all

  # All hosts are monitoring clients, i.e. all hosts are monitored.

  tasks:

    - block:

        - ansible.builtin.import_role:
            name: monitor_server
            tasks_from: get-all-access-token
          delegate_to: home

        - ansible.builtin.import_role:
            name: monitor_client
      
      tags: monitor

# ---------
# WordPress
# ---------

- hosts: wordpress

  # wordpress hosts provide WordPress site hosting services.

  tasks:

    - block:

        - ansible.builtin.import_role:
            name: database

        - ansible.builtin.import_role:
            name: wordpress_apache

        - ansible.builtin.import_role:
            name: reverse_proxy

      tags: wordpress
