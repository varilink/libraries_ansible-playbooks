# ------------------------------------------------------------------------------
# delete-site.yml
# ------------------------------------------------------------------------------

# Deletes a WordPress site that uses our default architecture for WordPress
# sites:
#  - MariaDB database
#  - Apache with the PHP module as a combined web and application layer
#  - A reverse proxy front-end based on Nginx

---

- hosts: wordpress

  tasks:

    - ansible.builtin.import_role:
        name: wordpress
        tasks_from: site-action-precursors

    - name: Remove Nginx reverse proxy configuration for the WordPress site
      ansible.builtin.import_role:
        name: reverse_proxy
        tasks_from: delete-site
      # By default the reverse proxy is co-hosted with WordPress web and
      # application layer. However, if wp_database_host is defined then it will
      # have been installed remote from the web and application layer on that
      # host.
      delegate_to: "{{ wp_reverse_proxy_host | default(inventory_hostname) }}"

    - name: Remove Apache2 web configuration for the WordPress site
      ansible.builtin.import_role:
        name: wordpress_apache
        tasks_from: delete-site

    - name: Remove the WordPress site's configuration
      ansible.builtin.import_role:
        name: wordpress
        tasks_from: delete-site

    - name: "\
        Delete WordPress site database and the database user used to access it"
      ansible.builtin.import_role:
        name: database
        tasks_from: delete-site
        handlers_from: none
      # By default the database is co-hosted with WordPress web and application
      # layer. However, if wp_database_host is defined then it will have been
      # installed remote from the web and application layer on that host.
      delegate_to: "{{ wp_database_host | default(inventory_hostname) }}"

- hosts: hub

  tasks:

    - name: Remove DNS record for the WordPress site from the office DNS service
      ansible.builtin.import_role:
        name: dns
        tasks_from: delete-project-record
      vars:
        dns_record_target: "\
          {{ groups['wordpress'] | intersect(ansible_limit) | first }}"
        dns_record_hostname: "{{ hostvars[dns_record_target].wp_server_name }}"
      when: "'internal' in group_names"

- hosts: gateway

  tasks:

    # Delete a Dynamic DNS record for the website, since it is hosted on the
    # office network but exposed externally to customer users.  

    - ansible.builtin.import_role:
        name: dynamic_dns
        tasks_from: delete-record
      vars:
        wp_host: "{{ groups['wordpress'] | intersect(ansible_limit) | first }}"
        dynamic_dns_record_hostname: "{{ hostvars[wp_host].wp_subdomain }}"
